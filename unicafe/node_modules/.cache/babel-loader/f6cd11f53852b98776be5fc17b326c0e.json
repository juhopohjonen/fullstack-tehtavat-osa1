{"ast":null,"code":"var _jsxFileName = \"/home/juho/Documents/fullstackopen/course-part-01/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { toHaveValue } from '@testing-library/jest-dom/dist/matchers';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 27\n  }, this);\n};\n\n_c = Title;\n\nconst Button = _ref2 => {\n  let {\n    increaseFunc,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: increaseFunc,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst StatisticLine = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 44\n  }, this);\n};\n\n_c3 = StatisticLine;\n\nconst Statistics = _ref4 => {\n  let {\n    content\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: 'good',\n      value: content.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: 'neutral',\n      value: content.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increaseByOne = (stateRead, stateSet) => {\n    stateSet(stateRead + 1);\n  }; // get average + summary\n\n\n  const all = [good, neutral, bad];\n  var summary = 0;\n\n  for (var i = 0; i < all.length; i++) {\n    summary += all[i];\n  }\n\n  var average = summary / all.length;\n  const statContent = {\n    'good': good,\n    'neutral': neutral,\n    'bad': bad\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      increaseFunc: () => increaseByOne(good, setGood),\n      text: 'good'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      increaseFunc: () => increaseByOne(bad, setBad),\n      text: 'bad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      increaseFunc: () => increaseByOne(neutral, setNeutral),\n      text: 'neutral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      content: statContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["toHaveValue","useState","Title","text","Button","increaseFunc","StatisticLine","value","Statistics","content","good","App","setGood","neutral","setNeutral","bad","setBad","increaseByOne","stateRead","stateSet","all","summary","i","length","average","statContent"],"sources":["/home/juho/Documents/fullstackopen/course-part-01/unicafe/src/App.js"],"sourcesContent":["import { toHaveValue } from '@testing-library/jest-dom/dist/matchers'\nimport { useState } from 'react'\n\nconst Title = ({text}) => <h1>{text}</h1>\n\nconst Button = ({ increaseFunc, text }) => (\n  <button onClick={increaseFunc}>{text}</button>\n)\n\nconst StatisticLine = ({ text, value }) => <p>{text} {value}</p>\n\nconst Statistics = ({ content }) => (\n  <div>\n    <StatisticLine text={'good'} value={content.good} />\n    <StatisticLine text={'neutral'} value={content.good} />\n  </div>\n)\n\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const increaseByOne = (stateRead, stateSet) => {\n    stateSet(stateRead + 1);\n  }\n\n  // get average + summary\n  const all = [good, neutral, bad];\n  \n  var summary = 0;\n  for (var i = 0; i < all.length; i++) {\n    summary += all[i];\n  }\n\n  var average = summary / all.length;\n  \n  const statContent = {\n    'good': good,\n    'neutral': neutral,\n    'bad': bad\n  }\n\n  return (\n    <div>\n      <Title text='give feedback' />\n\n      <Button increaseFunc={() => increaseByOne(good, setGood)} text={'good'} />\n      <Button increaseFunc={() => increaseByOne(bad, setBad)} text={'bad'} />\n      <Button increaseFunc={() => increaseByOne(neutral, setNeutral)} text={'neutral'} />\n    \n      <Statistics content={statContent} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}